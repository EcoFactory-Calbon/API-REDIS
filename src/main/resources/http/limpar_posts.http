### 0️⃣ Limpar todos os posts antigos (via SavedPostService ou diretamente no Redis)
# ⚠️ Use apenas se não tiver outros dados importantes no Redis
DELETE http://localhost:8080/users/456/savedPosts
Accept: application/json

###

### 1️⃣ Criar um post válido
POST http://localhost:8080/api/posts
Content-Type: application/json

{
  "id_user": "456",
  "ativo": true,
  "noticia": {
    "id": "123",
    "titulo": "Nova descoberta científica",
    "conteudo": "Detalhes da notícia aqui..."
  }
}

###

### 2️⃣ Criar outro post
POST http://localhost:8080/api/posts
Content-Type: application/json

{
  "id_user": "456",
  "ativo": true,
  "noticia": {
    "id": "124",
    "titulo": "Tecnologia avança rapidamente",
    "conteudo": "Novos dispositivos surgem..."
  }
}

###

### 3️⃣ Listar todos os posts
GET http://localhost:8080/api/posts
Accept: application/json

###

### 4️⃣ Buscar post por ID
GET http://localhost:8080/api/posts/findById/post:123:user:456
Accept: application/json

###

### 5️⃣ Atualizar status de um post
PUT http://localhost:8080/api/posts/updatePostStatus/post:123:user:456
Content-Type: application/json

{
  "ativo": false
}

###

### 6️⃣ Deletar um post
DELETE http://localhost:8080/api/posts/deletePostById/post:124:user:456

###

### 7️⃣ Testar SavedPostController - salvar post do usuário
POST http://localhost:8080/users/456/savedPosts
Content-Type: application/json

{
  "userId": 456,
  "postId": 123
}

###

### 8️⃣ Listar posts salvos de um usuário
GET http://localhost:8080/users/456/savedPosts
Accept: application/json

###

### 9️⃣ Remover post salvo do usuário
DELETE http://localhost:8080/users/456/savedPosts/123
